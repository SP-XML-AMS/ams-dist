function handleRequest(request) {
    var sUrlPath = getRelativePath(request);
    sUrlPath = std.str.trim(sUrlPath, "/");
    var sUrlPathParts = std.str.split(sUrlPath, "/");

    var reqData = {
        "path": sUrlPath,
        "parts": sUrlPathParts
    }

    var sControllerMode = sUrlPathParts[0];
    reqData.SetProperty("mode", sUrlPathParts[0]);

    // alert('ams request: ' + sUrlPath);
    try {
        if (sControllerMode === "module") {
            ams.web.controller.module.handle(request, reqData);
        } else if (sControllerMode === "drop") {
            ams.web.controller.drop.handle(request, reqData);
        } else {
            ams.web.error.respondWithMessage("Unknown mode: '{1}'.", [sControllerMode], 404);
        }
    } catch (err) {
        var ams_web_error = ams.web.error.parse(err);
        request.RespContentType = "text/html";
        // request.RespStream.WriteStr(EvalCodePageUrl("x-local://wt/web/ams/internal/web/static/error.html"));
        request.RespStream.WriteStr(EvalCodePageUrl(std.fu.resolve(ams.env.dist_dir_url, "web/static/error.html")));
    }
}

function getRelativePath(request) {
    var ddd = StrCharCount(ams.config.request_handler_url);
    return StrCharRangePos(request.UrlPath, ddd, StrCharCount(request.UrlPath))
}